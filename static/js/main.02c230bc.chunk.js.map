{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","components/Alert/Alert.module.css","redux/contacts/contactsActionTypes.js","redux/contacts/contactsActions.js","components/Alert/Alert.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","name","number","type","actionTypes","payload","contact","id","uuid4","removeContact","filterRender","filter","Alert","contactAdded","CSSTransition","in","timeout","classNames","styles","alert","unmountOnExit","className","alertBox","ContactForm","state","declaredName","handleChange","target","setState","value","handleSubmit","event","preventDefault","props","list","some","setTimeout","this","form","action","onSubmit","label","htmlFor","input","placeholder","onChange","inputBtn","Component","mapDispatchToProps","newContact","connect","contacts","items","ContactList","prevProps","prevState","localStorage","setItem","JSON","stringify","TransitionGroup","component","map","el","showbutton","listItem","btn","onClick","toDelete","contactsActions","toLowerCase","includes","box","e","App","container","appear","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","parse","getItem","combineReducers","rootReducer","contactReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02c230bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2o04T\",\"btn\":\"ContactList_btn__3S_AG\",\"listItem\":\"ContactList_listItem__LTLip\",\"enter\":\"ContactList_enter__HK2BM\",\"enterActive\":\"ContactList_enterActive__cU1LT\",\"exit\":\"ContactList_exit__RE3j0\",\"exitActive\":\"ContactList_exitActive__2Tr5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__mRcim\",\"title\":\"App_title__JuzFx\",\"appear\":\"App_appear__2TCOg\",\"appearActive\":\"App_appearActive__1Pwfo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Filter_box__16W6-\",\"input\":\"Filter_input__3urkP\",\"label\":\"Filter_label__1Kemw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertBox\":\"Alert_alertBox__2LoMu\",\"enter\":\"Alert_enter__3louc\",\"enterActive\":\"Alert_enterActive__1wkJ6\",\"alertExit\":\"Alert_alertExit__2axcG\",\"exitActive\":\"Alert_exitActive__18BdG\"};","const ADD = \"contacts/add\";\r\nconst DELETE = \"contacts/delete\";\r\nconst FILTER_RENDER = \"contacts/filterRender\";\r\nexport default {ADD,DELETE,FILTER_RENDER}\r\n","import actionTypes from \"./contactsActionTypes\";\r\nimport { v4 as uuid4 } from \"uuid\";\r\n\r\nconst addContact = ({ name, number }) => ({\r\n  type: actionTypes.ADD,\r\n  payload: {\r\n    contact: {\r\n      name,\r\n      number,\r\n      id: uuid4(),\r\n    },\r\n  },\r\n});\r\nconst removeContact = (id) => ({\r\n  type: actionTypes.DELETE,\r\n  payload: {\r\n    id,\r\n  },\r\n});\r\nconst filterRender = (filter) => ({\r\n  type: actionTypes.FILTER_RENDER,\r\n  payload: {\r\n    filter,\r\n  },\r\n});\r\nexport default { addContact, removeContact, filterRender };\r\n","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"../Alert/Alert.module.css\";\r\n\r\nconst Alert = ({ contactAdded }) => {\r\n  return (\r\n    <CSSTransition in={contactAdded} timeout={250} classNames={styles.alert} unmountOnExit>\r\n      <div className={styles.alertBox}>\r\n        <p>Contact already declared</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { v4 as uuid4 } from \"uuid\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport newContact from \"../../redux/contacts/contactsActions\";\r\n\r\nimport Alert from \"../Alert/Alert\";\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\", contactAdded: false, declaredName: \"\" };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const rule = this.props.list.some((contact) => contact.name === this.state.name);\r\n    if (rule) {\r\n      this.setState({ contactAdded: true });\r\n      setTimeout(() => this.setState({ contactAdded: false }), 2000);\r\n      return;\r\n    }\r\n    this.props.addContact({ ...this.state });\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, contactAdded } = this.state;\r\n    return (\r\n      <>\r\n        <Alert contactAdded={contactAdded} />\r\n\r\n        <div>\r\n          <form className={styles.form} action=\"\" onSubmit={this.handleSubmit}>\r\n            <label className={styles.label} htmlFor=\"name\">\r\n              {\" \"}\r\n              Name\r\n              <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                placeholder=\"name\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <label className={styles.label} htmlFor=\"number\">\r\n              {\" \"}\r\n              Number\r\n              <input\r\n                className={styles.input}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                placeholder=\"number\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <input className={styles.inputBtn} type=\"submit\" value=\"Add contuct\" />\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  list: state.contacts.items,\r\n});\r\nconst mapDispatchToProps = { addContact: newContact.addContact };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nclass ContactList extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.list !== this.props.list) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.props.list));\n    }\n  }\n  render() {\n    return (\n      <>\n        <TransitionGroup component=\"ul\" className={styles.list}>\n          {this.props.list.map((el) => {\n            return (\n              <CSSTransition key={el.id} classNames={styles.showbutton} timeout={250}>\n                <li key={el.id} className={styles.listItem}>\n                  {el.name} : {el.number}\n                  <button className={styles.btn} type=\"button\" onClick={() => this.props.toDelete(el.id)}>\n                    Удалить\n                  </button>\n                </li>\n              </CSSTransition>\n            );\n          })}\n        </TransitionGroup>\n      </>\n    );\n  }\n}\nContactList.propTypes = {\n  toDelete: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nconst mapStateToProps = (state, props) => ({\n  list: state.contacts.items.filter((contact) =>\n    contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\n  ),\n});\nconst mapDispatchToProps = { toDelete: contactsActions.removeContact };\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nconst Filter = ({ filterRender, filter }) => (\n  <div className={styles.box}>\n    <label className={styles.label}>Find contacts by name</label>\n    <input className={styles.input} type=\"text\" value={filter} onChange={(e) => filterRender(e.target.value)} />\n  </div>\n);\n\nFilter.propTypes = {\n  filterRender: PropTypes.func.isRequired,\n  filter: PropTypes.string,\n};\nconst mapStateToProps = (state, props) => ({\n  filter: state.contacts.filter,\n});\nconst mapDispatchToProps = { filterRender: contactsActions.filterRender };\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport ContactForm from \"../src/components/ContactForm/ContactForm\";\nimport ContactList from \"../src/components/ContactList/ContactList\";\nimport Filter from \"../src/components/Filter/Filter\";\nimport styles from \"./App.module.css\";\nimport { CSSTransition } from \"react-transition-group\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <>\n        <div className={styles.container}>\n          <CSSTransition in={true} appear={true} timeout={5000} classNames={styles}>\n            <h1 className={styles.title}>Phonebook</h1>\n          </CSSTransition>\n          <ContactForm />\n          <h2 className={styles.title}>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport actionTypes from \"./contactsActionTypes\";\r\n\r\nconst defaultContacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\nconst localList = JSON.parse(localStorage.getItem(\"contacts\"));\r\nconst INITIAL_STATE = {\r\n  contacts: localList || defaultContacts,\r\n  filter: \"\",\r\n};\r\n\r\nconst items = (state = INITIAL_STATE.contacts, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.ADD:\r\n      return [...state, payload.contact];\r\n    case actionTypes.DELETE:\r\n      return state.filter((contact) => contact.id !== payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst filter = (state = INITIAL_STATE.filter, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.FILTER_RENDER:\r\n      return payload.filter;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default combineReducers({ items, filter });\r\n// state = {\r\n//   contacts: [],\r\n//   filter: \"\",\r\n//   ...INITIAL_STATE,\r\n// };\r\n\r\n// componentDidMount() {\r\n//   const persistedTask = localStorage.getItem(\"contacts\");\r\n//   if (persistedTask === null) {\r\n//     this.setState({\r\n//       contacts: contactsList,\r\n//     });\r\n//   } else if (persistedTask) {\r\n//     this.setState({\r\n//       contacts: JSON.parse(persistedTask),\r\n//     });\r\n//   }\r\n// }\r\n// componentDidUpdate(prevProps, prevState) {\r\n//   if (prevState.contacts !== this.state.contacts) {\r\n//     this.state.contacts.length >= 1 && localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n//   }\r\n// }\r\n// toAddContact = (el) => {\r\n//   const rule = this.state.contacts.some((contact) => contact.name === el.name);\r\n//   if (rule) {\r\n//     this.setState({\r\n//       isVisible: true,\r\n//       message: \"Contact already exists!\",\r\n//     });\r\n//     setTimeout(() => {\r\n//       this.setState({\r\n//         ...INITIAL_STATE,\r\n//       });\r\n//     }, 1500);\r\n//   } else if (el.name.length >= 1) {\r\n//     this.setState((prev) => {\r\n//       const updateState = [...prev.contacts, el];\r\n//       return { contacts: updateState };\r\n//     });\r\n//   }\r\n// };\r\n// filterRender = (filter) => {\r\n//   this.setState({ filter });\r\n// };\r\n// filterTask = () => {\r\n//   const { contacts, filter } = this.state;\r\n//   return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n// };\r\n// toDelete = (id) => {\r\n//   const { contacts } = this.state;\r\n//   const obj = contacts.find((el) => el.id === id);\r\n//   const index = contacts.indexOf(obj);\r\n//   this.setState((prevState) => ({\r\n//     contacts: [...prevState.contacts.slice(0, index), ...prevState.contacts.slice(index + 1)],\r\n//   }));\r\n//   if (contacts.length < 2) {\r\n//     localStorage.removeItem(\"contacts\");\r\n//   }\r\n// };\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport contactReducer from \"./contacts/contactsReducer\";\r\n// import listReducer from \"./contacts/contactsReducer\";\r\n\r\n// Используем редюсер-болванку\r\nconst rootReducer = combineReducers({\r\n  contacts: contactReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer /* preloadedState, */,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nconsole.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__SVktT\",\"label\":\"ContactForm_label__R2--o\",\"input\":\"ContactForm_input__1ymkw\",\"inputBtn\":\"ContactForm_inputBtn__2QwEG\"};"],"sourceRoot":""}