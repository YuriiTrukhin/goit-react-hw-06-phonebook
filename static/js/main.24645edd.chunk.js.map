{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","components/Alert/Alert.module.css","redux/contacts/contactsActions.js","components/Alert/Alert.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","payload","contact","name","number","id","uuidv4","removeContact","filterRender","Alert","contactAdded","CSSTransition","in","timeout","classNames","styles","unmountOnExit","className","alertBox","ContactForm","state","handleChange","target","setState","value","handleSubmit","event","preventDefault","props","list","some","setTimeout","this","form","action","onSubmit","label","htmlFor","input","type","placeholder","onChange","inputBtn","Component","mapDispatchToProps","newContact","connect","contacts","items","ContactList","prevProps","prevState","localStorage","setItem","JSON","stringify","TransitionGroup","component","map","el","listItem","btn","onClick","toDelete","contactsActions","filter","toLowerCase","includes","box","e","App","container","appear","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","parse","getItem","createReducer","combineReducers","store","configureStore","reducer","contactReducer","console","log","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24645edd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2o04T\",\"btn\":\"ContactList_btn__3S_AG\",\"listItem\":\"ContactList_listItem__LTLip\",\"enter\":\"ContactList_enter__HK2BM\",\"enterActive\":\"ContactList_enterActive__cU1LT\",\"exit\":\"ContactList_exit__RE3j0\",\"exitActive\":\"ContactList_exitActive__2Tr5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__mRcim\",\"title\":\"App_title__JuzFx\",\"appear\":\"App_appear__2TCOg\",\"appearActive\":\"App_appearActive__1Pwfo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Filter_box__16W6-\",\"input\":\"Filter_input__3urkP\",\"label\":\"Filter_label__1Kemw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertBox\":\"Alert_alertBox__2LoMu\",\"enter\":\"Alert_enter__3louc\",\"enterActive\":\"Alert_enterActive__1wkJ6\",\"alertExit\":\"Alert_alertExit__2axcG\",\"exitActive\":\"Alert_exitActive__18BdG\"};","// import actionTypes from \"./contactsActionTypes\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/add\", ({ name, number }) => ({\r\n  payload: {\r\n    contact: {\r\n      name,\r\n      number,\r\n      id: uuidv4(),\r\n    },\r\n  },\r\n}));\r\n\r\n// const addContact = ({ name, number }) => ({\r\n//   type: actionTypes.ADD,\r\n//   payload: {\r\n//     contact: {\r\n//       name,\r\n//       number,\r\n//       id: uuidv4(),\r\n//     },\r\n//   },\r\n// });\r\n\r\nconst removeContact = createAction(\"contacts/delete\");\r\n// const removeContact = (id) => ({\r\n//   type: actionTypes.DELETE,\r\n//   payload: {\r\n//     id,\r\n//   },\r\n// });\r\nconst filterRender = createAction(\"contacts/filterRender\");\r\n// const filterRender = (filter) => ({\r\n//   type: actionTypes.FILTER_RENDER,\r\n//   payload: {\r\n//     filter,\r\n//   },\r\n// });\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, removeContact, filterRender };\r\n","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"../Alert/Alert.module.css\";\r\n\r\nconst Alert = ({ contactAdded }) => {\r\n  return (\r\n    <CSSTransition in={contactAdded} timeout={250} classNames={styles} unmountOnExit>\r\n      <div className={styles.alertBox}>\r\n        <p>Contact already declared</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styles from \"./ContactForm.module.css\";\r\nimport newContact from \"../../redux/contacts/contactsActions\";\r\n\r\nimport Alert from \"../Alert/Alert\";\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\", contactAdded: false };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const rule = this.props.list.some((contact) => contact.name === this.state.name);\r\n    if (rule) {\r\n      this.setState({ contactAdded: true });\r\n      setTimeout(() => this.setState({ contactAdded: false }), 2000);\r\n      return;\r\n    }\r\n    this.props.addContact({ ...this.state });\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, contactAdded } = this.state;\r\n    return (\r\n      <>\r\n        <Alert contactAdded={contactAdded} />\r\n\r\n        <div>\r\n          <form className={styles.form} action=\"\" onSubmit={this.handleSubmit}>\r\n            <label className={styles.label} htmlFor=\"name\">\r\n              {\" \"}\r\n              Name\r\n              <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                placeholder=\"name\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <label className={styles.label} htmlFor=\"number\">\r\n              {\" \"}\r\n              Number\r\n              <input\r\n                className={styles.input}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                placeholder=\"number\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <input className={styles.inputBtn} type=\"submit\" value=\"Add contuct\" />\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  list: state.contacts.items,\r\n});\r\nconst mapDispatchToProps = { addContact: newContact.addContact };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nclass ContactList extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.list !== this.props.list) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.props.list));\n    }\n  }\n  render() {\n    return (\n      <>\n        <TransitionGroup component=\"ul\" className={styles.list}>\n          {this.props.list.map((el) => {\n            return (\n              <CSSTransition key={el.id} classNames={styles} timeout={250}>\n                <li key={el.id} className={styles.listItem}>\n                  {el.name} : {el.number}\n                  <button className={styles.btn} type=\"button\" onClick={() => this.props.toDelete(el.id)}>\n                    Удалить\n                  </button>\n                </li>\n              </CSSTransition>\n            );\n          })}\n        </TransitionGroup>\n      </>\n    );\n  }\n}\nContactList.propTypes = {\n  toDelete: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nconst mapStateToProps = (state, props) => ({\n  list: state.contacts.items.filter((contact) =>\n    contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\n  ),\n});\nconst mapDispatchToProps = { toDelete: contactsActions.removeContact };\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nconst Filter = ({ filterRender, filter }) => (\n  <div className={styles.box}>\n    <label className={styles.label}>Find contacts by name</label>\n    <input className={styles.input} type=\"text\" value={filter} onChange={(e) => filterRender(e.target.value)} />\n  </div>\n);\n\nFilter.propTypes = {\n  filterRender: PropTypes.func.isRequired,\n  filter: PropTypes.string,\n};\nconst mapStateToProps = (state, props) => ({\n  filter: state.contacts.filter,\n});\nconst mapDispatchToProps = { filterRender: contactsActions.filterRender };\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport ContactForm from \"../src/components/ContactForm/ContactForm\";\nimport ContactList from \"../src/components/ContactList/ContactList\";\nimport Filter from \"../src/components/Filter/Filter\";\nimport styles from \"./App.module.css\";\nimport { CSSTransition } from \"react-transition-group\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <>\n        <div className={styles.container}>\n          <CSSTransition in={true} appear={true} timeout={5000} classNames={styles}>\n            <h1 className={styles.title}>Phonebook</h1>\n          </CSSTransition>\n          <ContactForm />\n          <h2 className={styles.title}>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\n// import actionTypes from \"./contactsActionTypes\";\r\nimport contactsActions from \"./contactsActions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst defaultContacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\nconst localList = JSON.parse(localStorage.getItem(\"contacts\"));\r\nconst INITIAL_STATE = {\r\n  contacts: localList || defaultContacts,\r\n  filter: \"\",\r\n};\r\n\r\nconst newContact = (state, action) => [...state, action.payload.contact];\r\nconst removeContact = (state, action) => state.filter((contact) => contact.id !== action.payload);\r\n// const filter = ()\r\nconst items = createReducer(INITIAL_STATE.contacts, {\r\n  [contactsActions.addContact]: newContact,\r\n  [contactsActions.removeContact]: removeContact,\r\n});\r\n\r\n// const items = (state = INITIAL_STATE.contacts, { type, payload }) => {\r\n//   switch (type) {\r\n//     case contactsActions.addContact.type:\r\n//       return [...state, payload.contact];\r\n//     case contactsActions.removeContact.type:\r\n//       return state.filter((contact) => contact.id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nconst filter = createReducer(INITIAL_STATE.filter, {\r\n  [contactsActions.filterRender]: (state, action) => action.payload,\r\n});\r\n// const filter = (state = INITIAL_STATE.filter, { type, payload }) => {\r\n//   switch (type) {\r\n//     case contactsActions.filterRender.type:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nexport default combineReducers({ items, filter });\r\n// state = {\r\n//   contacts: [],\r\n//   filter: \"\",\r\n//   ...INITIAL_STATE,\r\n// };\r\n\r\n// componentDidMount() {\r\n//   const persistedTask = localStorage.getItem(\"contacts\");\r\n//   if (persistedTask === null) {\r\n//     this.setState({\r\n//       contacts: contactsList,\r\n//     });\r\n//   } else if (persistedTask) {\r\n//     this.setState({\r\n//       contacts: JSON.parse(persistedTask),\r\n//     });\r\n//   }\r\n// }\r\n// componentDidUpdate(prevProps, prevState) {\r\n//   if (prevState.contacts !== this.state.contacts) {\r\n//     this.state.contacts.length >= 1 && localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n//   }\r\n// }\r\n// toAddContact = (el) => {\r\n//   const rule = this.state.contacts.some((contact) => contact.name === el.name);\r\n//   if (rule) {\r\n//     this.setState({\r\n//       isVisible: true,\r\n//       message: \"Contact already exists!\",\r\n//     });\r\n//     setTimeout(() => {\r\n//       this.setState({\r\n//         ...INITIAL_STATE,\r\n//       });\r\n//     }, 1500);\r\n//   } else if (el.name.length >= 1) {\r\n//     this.setState((prev) => {\r\n//       const updateState = [...prev.contacts, el];\r\n//       return { contacts: updateState };\r\n//     });\r\n//   }\r\n// };\r\n// filterRender = (filter) => {\r\n//   this.setState({ filter });\r\n// };\r\n// filterTask = () => {\r\n//   const { contacts, filter } = this.state;\r\n//   return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n// };\r\n// toDelete = (id) => {\r\n//   const { contacts } = this.state;\r\n//   const obj = contacts.find((el) => el.id === id);\r\n//   const index = contacts.indexOf(obj);\r\n//   this.setState((prevState) => ({\r\n//     contacts: [...prevState.contacts.slice(0, index), ...prevState.contacts.slice(index + 1)],\r\n//   }));\r\n//   if (contacts.length < 2) {\r\n//     localStorage.removeItem(\"contacts\");\r\n//   }\r\n// };\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n// import { createStore, combineReducers } from \"redux\";\r\nimport contactReducer from \"./contacts/contactsReducer\";\r\n// import listReducer from \"./contacts/contactsReducer\";\r\n\r\n// Используем редюсер-болванку\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactReducer,\r\n// });\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n});\r\n\r\n// const store = createStore(\r\n//   rootReducer /* preloadedState, */,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n// );\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nconsole.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__SVktT\",\"label\":\"ContactForm_label__R2--o\",\"input\":\"ContactForm_input__1ymkw\",\"inputBtn\":\"ContactForm_inputBtn__2QwEG\"};"],"sourceRoot":""}